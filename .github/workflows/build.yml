name: Build and Package
on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            dpkg-dev \
            rpm
      
      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          choco install wixtoolset -y
          echo "WIX=C:\Program Files (x86)\WiX Toolset v3.11\bin" >> $GITHUB_ENV
      
      - name: Prepare Windows license file
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          if (!(Test-Path "LICENSE.rtf")) {
              " " | Out-File -Encoding ASCII "LICENSE.rtf"
          }
      
      - name: Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: brew install cmake
      

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release
      
      - name: Build project
        run: cmake --build build --config Release

      - name: Create Linux packages
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd build
          cpack -G TGZ
          cpack -G DEB
          cpack -G RPM
      
      - name: Create Windows package
        if: matrix.os == 'windows-latest'
        run: |
          cd build
          cpack -G WIX -C Release -V --debug
      
      - name: Create macOS package
        if: matrix.os == 'macos-latest'
        run: |
          cd build
          cpack -G DragNDrop

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: Windows-Packages
          path: build/*.msi
      
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: Linux-Packages
          path: |
            build/*.deb
            build/*.rpm
            build/*.tar.gz
      
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macOS-Packages
          path: build/*.dmg
